"use strict"; var key, prng, loadTime = (new Date).getTime(); function setKey() { if (document.getElementById("key").keytype[0].checked) { var e; for (1 == (r = encode_utf8(document.getElementById("key").text.value)).length && (r += r), md5_init(), n = 0; n < r.length; n += 2)md5_update(r.charCodeAt(n)); for (md5_finish(), e = byteArrayToHex(digestBits), md5_init(), n = 1; n < r.length; n += 2)md5_update(r.charCodeAt(n)); md5_finish(); var t = e + byteArrayToHex(digestBits); key = hexToByteArray(t), t = byteArrayToHex(key) } else { var n, r = document.getElementById("key").text.value, d = (t = "", !1); for (n = 0; n < r.length; n++) { var a = r.charAt(n); "0123456789abcdefABCDEF".indexOf(a) >= 0 ? t += a : d = !0 } if (d && alert("Error: Improper character(s) in hexadecimal key."), t.length > keySizeInBits / 4) alert("Warning: hexadecimal key exceeds " + keySizeInBits / 4 + " digit maximum; truncated."), document.getElementById("key").text.value = t = t.slice(0, 64); else for (; t.length < keySizeInBits / 4;)t += "0"; key = hexToByteArray(t) } } function Generate_key() { var e, t, n = ""; n = ""; addEntropyTime(); var r = keyFromEntropy(), d = new AESprng(r); if (document.getElementById("key").keytype[0].checked) { var a = "A".charCodeAt(0); for (e = 0; e < 12; e++)for (e > 0 && (n += "-"), t = 0; t < 5; t++)n += String.fromCharCode(a + d.nextInt(25)) } else { for (e = 0; e < 64; e++)n += "0123456789ABCDEF".charAt(d.nextInt(15)) } document.getElementById("key").text.value = n, d = null } function Encrypt_text() { var e, t; if (0 != document.getElementById("key").text.value.length) if (0 != document.getElementById("plain").text.value.length) { document.getElementById("cipher").text.value = "", setKey(), addEntropyTime(), prng = new AESprng(keyFromEntropy()); var n = encode_utf8(document.getElementById("plain").text.value); for (md5_init(), t = 0; t < n.length; t++)md5_update(n.charCodeAt(t)); md5_finish(); var r = ""; for (t = 0; t < digestBits.length; t++)r += String.fromCharCode(digestBits[t]); t = n.length, r += String.fromCharCode(t >>> 24), r += String.fromCharCode(t >>> 16), r += String.fromCharCode(t >>> 8), r += String.fromCharCode(255 & t); var d = rijndaelEncrypt(r + n, key, "CBC"); document.getElementById("plain").encoding[0].checked ? e = armour_codegroup(d) : document.getElementById("plain").encoding[1].checked ? e = armour_hex(d) : document.getElementById("plain").encoding[2].checked && (e = armour_base64(d)), document.getElementById("cipher").text.value = "#####  Encrypted: decrypt with http://www.fourmilab.ch/javascrypt/\n" + e + "#####  End encrypted message\n", prng = null } else alert("No plain text to encrypt!  Please enter or paste plain text in the field above."); else alert("Please specify a key with which to encrypt the message.") } function determineArmourType(e) { var t, n, r, d, a; return n = e.indexOf(codegroupSentinel), r = e.indexOf(hexSentinel), d = e.indexOf(base64sent), -1 == n && (n = e.length), -1 == r && (r = e.length), -1 == d && (d = e.length), (a = Math.min(n, Math.min(r, d))) < e.length ? t = a == n ? 0 : a == r ? 1 : 2 : document.getElementById("plain").encoding[0].checked ? t = 0 : document.getElementById("plain").encoding[1].checked ? t = 1 : document.getElementById("plain").encoding[2].checked && (t = 2), t } function Decrypt_text() { if (0 != document.getElementById("key").text.value.length) if (0 != document.getElementById("cipher").text.value.length) { document.getElementById("plain").text.value = "", setKey(); var e, t = new Array; 0 == (e = determineArmourType(document.getElementById("cipher").text.value)) ? t = disarm_codegroup(document.getElementById("cipher").text.value) : 1 == e ? t = disarm_hex(document.getElementById("cipher").text.value) : 2 == e && (t = disarm_base64(document.getElementById("cipher").text.value)); var n = rijndaelDecrypt(t, key, "CBC"), r = n.slice(0, 20); n = n.slice(20); var d = r[16] << 24 | r[17] << 16 | r[18] << 8 | r[19]; (d < 0 || d > n.length) && (alert("Message (length " + n.length + ") truncated.  " + d + " characters expected."), d = n.length); var a, i = ""; for (md5_init(), a = 0; a < d; a++)i += String.fromCharCode(n[a]), md5_update(n[a]); for (md5_finish(), a = 0; a < digestBits.length; a++)if (digestBits[a] != r[a]) { alert("Message corrupted.  Checksum of decrypted message does not match."); break } document.getElementById("plain").text.value = decode_utf8(i) } else alert("No cipher text to decrypt!  Please enter or paste cipher text in the field above."); else alert("Please specify a key with which to decrypt the message.") }